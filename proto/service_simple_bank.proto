syntax = "proto3";

package pb;

import "rpc_create_user.proto";
import "rpc_login_user.proto";
import "rpc_update_user.proto";
import "rpc_verify_email.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/patchbrain/simple-bank/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Simple Bank API";
    version: "1.1";
    contact: {
      name: "patchbrain";
      url: "https://github.com/patchbrain";
      email: "none@example.com";
    };
  };
};

service SimpleBank {
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
    option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "使用该API创建用户";
      summary: "创建新用户"
    };
  }
  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
    option (google.api.http) = {
      patch: "/v1/update_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "使用该API更新用户";
      summary: "更新用户"
    };
  }
  rpc LoginUser (LoginUserRequest) returns (LoginUserResponse){
    option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "使用该API登录用户";
      summary: "登录用户"
    };
  }
  rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse){
    option (google.api.http) = {
      get: "/v1/verify_email"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "使用该API验证邮箱";
      summary: "验证邮箱"
    };
  }
}